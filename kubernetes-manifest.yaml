---
apiVersion: apps/v1
kind: Deployment
metadata:
  annotations:
    kompose.cmd: kompose convert -f docker-compose.yaml
    kompose.version: 1.26.1 (a9d05d509)
  creationTimestamp: null
  labels:
    io.kompose.service: catalog-service
  name: catalog-service
spec:
  replicas: 1
  selector:
    matchLabels:
      io.kompose.service: catalog-service
  strategy: {}
  template:
    metadata:
      annotations:
        kompose.cmd: kompose convert -f docker-compose.yaml
        kompose.version: 1.26.1 (a9d05d509)
      creationTimestamp: null
      labels:
        io.kompose.service: catalog-service
    spec:
      containers:
        - args:
            - -c
            - " while ! (nc -z config-server 8888 && nc -z vault 8200); do sleep 5; echo 'Waiting for vault and config-server services to start-up...'; done; java -Xdebug -Xrunjdwp:server=y,transport=dt_socket,address=8787,suspend=n -jar -Dspring.profiles.active=docker /app.jar "
          command:
            - /bin/sh
          image: spring-boot-microservices-series_catalog-service
          name: catalog-service
          ports:
            - containerPort: 8181
            - containerPort: 8787
          resources: {}
      restartPolicy: Always
status: {}
---
apiVersion: v1
kind: Service
metadata:
  annotations:
    kompose.cmd: kompose convert -f docker-compose.yaml
    kompose.version: 1.26.1 (a9d05d509)
  creationTimestamp: null
  labels:
    io.kompose.service: catalog-service
  name: catalog-service
spec:
  ports:
    - name: "18181"
      port: 18181
      targetPort: 8181
    - name: "19797"
      port: 19797
      targetPort: 8787
  selector:
    io.kompose.service: catalog-service
status:
  loadBalancer: {}
---
apiVersion: apps/v1
kind: Deployment
metadata:
  annotations:
    kompose.cmd: kompose convert -f docker-compose.yaml
    kompose.version: 1.26.1 (a9d05d509)
  creationTimestamp: null
  labels:
    io.kompose.service: config-server
  name: config-server
spec:
  replicas: 1
  selector:
    matchLabels:
      io.kompose.service: config-server
  strategy: {}
  template:
    metadata:
      annotations:
        kompose.cmd: kompose convert -f docker-compose.yaml
        kompose.version: 1.26.1 (a9d05d509)
      creationTimestamp: null
      labels:
        io.kompose.service: config-server
    spec:
      containers:
        - image: spring-boot-microservices-series_config-server
          name: config-server
          ports:
            - containerPort: 8888
            - containerPort: 8787
          resources: {}
      restartPolicy: Always
status: {}
---
apiVersion: v1
kind: Service
metadata:
  annotations:
    kompose.cmd: kompose convert -f docker-compose.yaml
    kompose.version: 1.26.1 (a9d05d509)
  creationTimestamp: null
  labels:
    io.kompose.service: config-server
  name: config-server
spec:
  ports:
    - name: "8888"
      port: 8888
      targetPort: 8888
    - name: "18787"
      port: 18787
      targetPort: 8787
  selector:
    io.kompose.service: config-server
status:
  loadBalancer: {}
---
apiVersion: apps/v1
kind: Deployment
metadata:
  annotations:
    kompose.cmd: kompose convert -f docker-compose.yaml
    kompose.version: 1.26.1 (a9d05d509)
  creationTimestamp: null
  labels:
    io.kompose.service: hystrix-dashboard
  name: hystrix-dashboard
spec:
  replicas: 1
  selector:
    matchLabels:
      io.kompose.service: hystrix-dashboard
  strategy: {}
  template:
    metadata:
      annotations:
        kompose.cmd: kompose convert -f docker-compose.yaml
        kompose.version: 1.26.1 (a9d05d509)
      creationTimestamp: null
      labels:
        io.kompose.service: hystrix-dashboard
    spec:
      containers:
        - image: spring-boot-microservices-series_hystrix-dashboard
          name: hystrix-dashboard
          ports:
            - containerPort: 8788
            - containerPort: 8787
          resources: {}
      restartPolicy: Always
status: {}
---
apiVersion: v1
kind: Service
metadata:
  annotations:
    kompose.cmd: kompose convert -f docker-compose.yaml
    kompose.version: 1.26.1 (a9d05d509)
  creationTimestamp: null
  labels:
    io.kompose.service: hystrix-dashboard
  name: hystrix-dashboard
spec:
  ports:
    - name: "8788"
      port: 8788
      targetPort: 8788
    - name: "38787"
      port: 38787
      targetPort: 8787
  selector:
    io.kompose.service: hystrix-dashboard
status:
  loadBalancer: {}
---
apiVersion: apps/v1
kind: Deployment
metadata:
  annotations:
    kompose.cmd: kompose convert -f docker-compose.yaml
    kompose.version: 1.26.1 (a9d05d509)
  creationTimestamp: null
  labels:
    io.kompose.service: inventory-service
  name: inventory-service
spec:
  replicas: 1
  selector:
    matchLabels:
      io.kompose.service: inventory-service
  strategy: {}
  template:
    metadata:
      annotations:
        kompose.cmd: kompose convert -f docker-compose.yaml
        kompose.version: 1.26.1 (a9d05d509)
      creationTimestamp: null
      labels:
        io.kompose.service: inventory-service
    spec:
      containers:
        - args:
            - -c
            - " while ! (nc -z config-server 8888 && nc -z vault 8200); do sleep 5; echo 'Waiting for vault and config-server services to start-up...'; done; java -Xdebug -Xrunjdwp:server=y,transport=dt_socket,address=8787,suspend=n -jar -Dspring.profiles.active=docker /app.jar "
          command:
            - /bin/sh
          image: spring-boot-microservices-series_inventory-service
          name: inventory-service
          ports:
            - containerPort: 8282
            - containerPort: 8787
          resources: {}
      restartPolicy: Always
status: {}
---
apiVersion: v1
kind: Service
metadata:
  annotations:
    kompose.cmd: kompose convert -f docker-compose.yaml
    kompose.version: 1.26.1 (a9d05d509)
  creationTimestamp: null
  labels:
    io.kompose.service: inventory-service
  name: inventory-service
spec:
  ports:
    - name: "18282"
      port: 18282
      targetPort: 8282
    - name: "29797"
      port: 29797
      targetPort: 8787
  selector:
    io.kompose.service: inventory-service
status:
  loadBalancer: {}
---
apiVersion: apps/v1
kind: Deployment
metadata:
  annotations:
    kompose.cmd: kompose convert -f docker-compose.yaml
    kompose.version: 1.26.1 (a9d05d509)
  creationTimestamp: null
  labels:
    io.kompose.service: mysqldb
  name: mysqldb
spec:
  replicas: 1
  selector:
    matchLabels:
      io.kompose.service: mysqldb
  strategy: {}
  template:
    metadata:
      annotations:
        kompose.cmd: kompose convert -f docker-compose.yaml
        kompose.version: 1.26.1 (a9d05d509)
      creationTimestamp: null
      labels:
        io.kompose.service: mysqldb
    spec:
      containers:
        - env:
            - name: MYSQL_DATABASE
              value: catalog
            - name: MYSQL_ROOT_PASSWORD
              value: admin
          image: mysql:5.7
          name: mysqldb
          ports:
            - containerPort: 3306
          resources: {}
      restartPolicy: Always
status: {}
---
apiVersion: v1
kind: Service
metadata:
  annotations:
    kompose.cmd: kompose convert -f docker-compose.yaml
    kompose.version: 1.26.1 (a9d05d509)
  creationTimestamp: null
  labels:
    io.kompose.service: mysqldb
  name: mysqldb
spec:
  ports:
    - name: "3306"
      port: 3306
      targetPort: 3306
  selector:
    io.kompose.service: mysqldb
status:
  loadBalancer: {}
---
apiVersion: apps/v1
kind: Deployment
metadata:
  annotations:
    kompose.cmd: kompose convert -f docker-compose.yaml
    kompose.version: 1.26.1 (a9d05d509)
  creationTimestamp: null
  labels:
    io.kompose.service: oauth2-server
  name: oauth2-server
spec:
  replicas: 1
  selector:
    matchLabels:
      io.kompose.service: oauth2-server
  strategy: {}
  template:
    metadata:
      annotations:
        kompose.cmd: kompose convert -f docker-compose.yaml
        kompose.version: 1.26.1 (a9d05d509)
      creationTimestamp: null
      labels:
        io.kompose.service: oauth2-server
    spec:
      containers:
        - args:
            - -c
            - " while ! (nc -z config-server 8888 && nc -z vault 8200); do sleep 5; echo 'Waiting for vault and config-server services to start-up...'; done; java -Xdebug -Xrunjdwp:server=y,transport=dt_socket,address=8787,suspend=n -jar -Dspring.profiles.active=docker /app.jar "
          command:
            - /bin/sh
          image: spring-boot-microservices-series_oauth2-server
          name: oauth2-server
          ports:
            - containerPort: 8901
          resources: {}
      restartPolicy: Always
status: {}
---
apiVersion: v1
kind: Service
metadata:
  annotations:
    kompose.cmd: kompose convert -f docker-compose.yaml
    kompose.version: 1.26.1 (a9d05d509)
  creationTimestamp: null
  labels:
    io.kompose.service: oauth2-server
  name: oauth2-server
spec:
  ports:
    - name: "8901"
      port: 8901
      targetPort: 8901
  selector:
    io.kompose.service: oauth2-server
status:
  loadBalancer: {}
---
apiVersion: apps/v1
kind: Deployment
metadata:
  annotations:
    kompose.cmd: kompose convert -f docker-compose.yaml
    kompose.version: 1.26.1 (a9d05d509)
  creationTimestamp: null
  labels:
    io.kompose.service: order-service
  name: order-service
spec:
  replicas: 1
  selector:
    matchLabels:
      io.kompose.service: order-service
  strategy: {}
  template:
    metadata:
      annotations:
        kompose.cmd: kompose convert -f docker-compose.yaml
        kompose.version: 1.26.1 (a9d05d509)
      creationTimestamp: null
      labels:
        io.kompose.service: order-service
    spec:
      containers:
        - args:
            - -c
            - " while ! (nc -z config-server 8888 && nc -z vault 8200); do sleep 5; echo 'Waiting for vault and config-server services to start-up...'; done; java -Xdebug -Xrunjdwp:server=y,transport=dt_socket,address=8787,suspend=n -jar -Dspring.profiles.active=docker /app.jar "
          command:
            - /bin/sh
          image: spring-boot-microservices-series_order-service
          name: order-service
          ports:
            - containerPort: 8383
            - containerPort: 8787
          resources: {}
      restartPolicy: Always
status: {}
---
apiVersion: v1
kind: Service
metadata:
  annotations:
    kompose.cmd: kompose convert -f docker-compose.yaml
    kompose.version: 1.26.1 (a9d05d509)
  creationTimestamp: null
  labels:
    io.kompose.service: order-service
  name: order-service
spec:
  ports:
    - name: "18383"
      port: 18383
      targetPort: 8383
    - name: "39797"
      port: 39797
      targetPort: 8787
  selector:
    io.kompose.service: order-service
status:
  loadBalancer: {}
---
apiVersion: apps/v1
kind: Deployment
metadata:
  annotations:
    kompose.cmd: kompose convert -f docker-compose.yaml
    kompose.version: 1.26.1 (a9d05d509)
  creationTimestamp: null
  labels:
    io.kompose.service: rabbitmq
  name: rabbitmq
spec:
  replicas: 1
  selector:
    matchLabels:
      io.kompose.service: rabbitmq
  strategy: {}
  template:
    metadata:
      annotations:
        kompose.cmd: kompose convert -f docker-compose.yaml
        kompose.version: 1.26.1 (a9d05d509)
      creationTimestamp: null
      labels:
        io.kompose.service: rabbitmq
    spec:
      containers:
        - env:
            - name: RABBITMQ_DEFAULT_PASS
              value: guest
            - name: RABBITMQ_DEFAULT_USER
              value: guest
          image: rabbitmq:3.8.3-management
          name: rabbitmq
          ports:
            - containerPort: 5672
            - containerPort: 15672
          resources: {}
      restartPolicy: Always
status: {}
---
apiVersion: v1
kind: Service
metadata:
  annotations:
    kompose.cmd: kompose convert -f docker-compose.yaml
    kompose.version: 1.26.1 (a9d05d509)
  creationTimestamp: null
  labels:
    io.kompose.service: rabbitmq
  name: rabbitmq
spec:
  ports:
    - name: "5672"
      port: 5672
      targetPort: 5672
    - name: "15672"
      port: 15672
      targetPort: 15672
  selector:
    io.kompose.service: rabbitmq
status:
  loadBalancer: {}
---
apiVersion: apps/v1
kind: Deployment
metadata:
  annotations:
    kompose.cmd: kompose convert -f docker-compose.yaml
    kompose.version: 1.26.1 (a9d05d509)
  creationTimestamp: null
  labels:
    io.kompose.service: service-registry
  name: service-registry
spec:
  replicas: 1
  selector:
    matchLabels:
      io.kompose.service: service-registry
  strategy: {}
  template:
    metadata:
      annotations:
        kompose.cmd: kompose convert -f docker-compose.yaml
        kompose.version: 1.26.1 (a9d05d509)
      creationTimestamp: null
      labels:
        io.kompose.service: service-registry
    spec:
      containers:
        - image: spring-boot-microservices-series_service-registry
          name: service-registry
          ports:
            - containerPort: 8761
            - containerPort: 8787
          resources: {}
      restartPolicy: Always
status: {}
---
apiVersion: v1
kind: Service
metadata:
  annotations:
    kompose.cmd: kompose convert -f docker-compose.yaml
    kompose.version: 1.26.1 (a9d05d509)
  creationTimestamp: null
  labels:
    io.kompose.service: service-registry
  name: service-registry
spec:
  ports:
    - name: "8761"
      port: 8761
      targetPort: 8761
    - name: "28787"
      port: 28787
      targetPort: 8787
  selector:
    io.kompose.service: service-registry
status:
  loadBalancer: {}
---
apiVersion: v1
kind: PersistentVolumeClaim
metadata:
  creationTimestamp: null
  labels:
    io.kompose.service: setup-vault-claim0
  name: setup-vault-claim0
spec:
  accessModes:
    - ReadWriteOnce
  resources:
    requests:
      storage: 100Mi
status: {}
---
apiVersion: apps/v1
kind: Deployment
metadata:
  annotations:
    kompose.cmd: kompose convert -f docker-compose.yaml
    kompose.version: 1.26.1 (a9d05d509)
  creationTimestamp: null
  labels:
    io.kompose.service: setup-vault
  name: setup-vault
spec:
  replicas: 1
  selector:
    matchLabels:
      io.kompose.service: setup-vault
  strategy:
    type: Recreate
  template:
    metadata:
      annotations:
        kompose.cmd: kompose convert -f docker-compose.yaml
        kompose.version: 1.26.1 (a9d05d509)
      creationTimestamp: null
      labels:
        io.kompose.service: setup-vault
    spec:
      containers:
        - args:
            - -c
            - " sleep 2; /config/vault-init.sh; "
          command:
            - /bin/sh
          env:
            - name: CONFIG_DIR
              value: /config
            - name: VAULT_ADDR
              value: http://vault:8200
          image: vault:1.4.0
          name: setup-vault
          resources: {}
          volumeMounts:
            - mountPath: /config
              name: setup-vault-claim0
      restartPolicy: Always
      volumes:
        - name: setup-vault-claim0
          persistentVolumeClaim:
            claimName: setup-vault-claim0
status: {}
---
apiVersion: apps/v1
kind: Deployment
metadata:
  annotations:
    kompose.cmd: kompose convert -f docker-compose.yaml
    kompose.version: 1.26.1 (a9d05d509)
  creationTimestamp: null
  labels:
    io.kompose.service: shoppingcart-ui
  name: shoppingcart-ui
spec:
  replicas: 1
  selector:
    matchLabels:
      io.kompose.service: shoppingcart-ui
  strategy: {}
  template:
    metadata:
      annotations:
        kompose.cmd: kompose convert -f docker-compose.yaml
        kompose.version: 1.26.1 (a9d05d509)
      creationTimestamp: null
      labels:
        io.kompose.service: shoppingcart-ui
    spec:
      containers:
        - args:
            - -c
            - " while ! (nc -z config-server 8888 && nc -z vault 8200); do sleep 5; echo 'Waiting for vault and config-server services to start-up...'; done; java -Xdebug -Xrunjdwp:server=y,transport=dt_socket,address=8787,suspend=n -jar -Dspring.profiles.active=docker /app.jar "
          command:
            - /bin/sh
          image: spring-boot-microservices-series_shoppingcart-ui
          name: shoppingcart-ui
          ports:
            - containerPort: 8080
            - containerPort: 8787
          resources: {}
      restartPolicy: Always
status: {}
---
apiVersion: v1
kind: Service
metadata:
  annotations:
    kompose.cmd: kompose convert -f docker-compose.yaml
    kompose.version: 1.26.1 (a9d05d509)
  creationTimestamp: null
  labels:
    io.kompose.service: shoppingcart-ui
  name: shoppingcart-ui
spec:
  ports:
    - name: "8080"
      port: 8080
      targetPort: 8080
    - name: "49797"
      port: 49797
      targetPort: 8787
  selector:
    io.kompose.service: shoppingcart-ui
  type: LoadBalancer
status:
  loadBalancer: {}
---
apiVersion: apps/v1
kind: Deployment
metadata:
  annotations:
    kompose.cmd: kompose convert -f docker-compose.yaml
    kompose.version: 1.26.1 (a9d05d509)
  creationTimestamp: null
  labels:
    io.kompose.service: vault
  name: vault
spec:
  replicas: 1
  selector:
    matchLabels:
      io.kompose.service: vault
  strategy: {}
  template:
    metadata:
      annotations:
        kompose.cmd: kompose convert -f docker-compose.yaml
        kompose.version: 1.26.1 (a9d05d509)
      creationTimestamp: null
      labels:
        io.kompose.service: vault
    spec:
      containers:
        - env:
            - name: VAULT_DEV_ROOT_TOKEN_ID
              value: 934f9eae-31ff-a8ef-e1ca-4bea9e07aa09
          image: vault:1.4.0
          name: vault
          ports:
            - containerPort: 8200
          resources: {}
          securityContext:
            capabilities:
              add:
                - IPC_LOCK
      restartPolicy: Always
status: {}
---
apiVersion: v1
kind: Service
metadata:
  annotations:
    kompose.cmd: kompose convert -f docker-compose.yaml
    kompose.version: 1.26.1 (a9d05d509)
  creationTimestamp: null
  labels:
    io.kompose.service: vault
  name: vault
spec:
  ports:
    - name: "8200"
      port: 8200
      targetPort: 8200
  selector:
    io.kompose.service: vault
status:
  loadBalancer: {}
---
apiVersion: apps/v1
kind: Deployment
metadata:
  annotations:
    kompose.cmd: kompose convert -f docker-compose.yaml
    kompose.version: 1.26.1 (a9d05d509)
  creationTimestamp: null
  labels:
    io.kompose.service: zipkin-server
  name: zipkin-server
spec:
  replicas: 1
  selector:
    matchLabels:
      io.kompose.service: zipkin-server
  strategy: {}
  template:
    metadata:
      annotations:
        kompose.cmd: kompose convert -f docker-compose.yaml
        kompose.version: 1.26.1 (a9d05d509)
      creationTimestamp: null
      labels:
        io.kompose.service: zipkin-server
    spec:
      containers:
        - env:
            - name: STORAGE_TYPE
              value: mem
          image: openzipkin/zipkin:2.21
          name: zipkin
          ports:
            - containerPort: 9411
          resources: {}
      restartPolicy: Always
status: {}
---
apiVersion: v1
kind: Service
metadata:
  annotations:
    kompose.cmd: kompose convert -f docker-compose.yaml
    kompose.version: 1.26.1 (a9d05d509)
  creationTimestamp: null
  labels:
    io.kompose.service: zipkin-server
  name: zipkin-server
spec:
  ports:
    - name: "9411"
      port: 9411
      targetPort: 9411
  selector:
    io.kompose.service: zipkin-server
status:
  loadBalancer: {}
